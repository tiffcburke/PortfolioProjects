/*

Here are queries from multiple tables to review customer and order statistics.

*/

--Number of orders in January
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE Product = 'iPhone';


--Account numbers associated with the orders placed in February
SELECT C.acctnum, FS.orderID
FROM BIT_DB.FebSales FS
INNER JOIN BIT_DB.Customers C
ON C.order_id = FS.orderID;


--Cheapest item sold in January 
SELECT DISTINCT Product, MIN(price)
FROM BIT_DB.JanSales;


--Total revenue by product sold in Janruary 
SELECT Product, SUM(Quantity) * price AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product;


--Information on products sold to 548 Lincoln Street in Feburary
SELECT Product, location, Quantity, orderdate, price, SUM(Quantity) * price AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';


--Customers who ordered more than 2 products in February and the average amount spent
SELECT COUNT(C.acctnum), AVG(FS.Quantity) * FS.price
FROM BIT_DB.FebSales FS
INNER JOIN BIT_DB.Customers C
ON C.order_id = FS.orderID
WHERE FS.Quantity > 2;


--Orders on February 18th at any time of the day
SELECT Product, price, orderdate, location
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/18/19%';


--Number of products sold in Los Angeles in February
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;


--Locations in NY that recieved at least 3 orders
SELECT DISTINCT location, COUNT(orderID) AS NumberOfOrders
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING COUNT(orderID) >= 3;


--Number of distinct type of headphones sold in February
SELECT DISTINCT product, SUM(Quantity) AS NumberSold
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphone%'
GROUP BY product;


--Average amount spent in Feburary
SELECT SUM(FS.Quantity * FS.price) / COUNT(C.acctnum) AS AverageSpent
FROM BIT_DB.FebSales FS
INNER JOIN BIT_DB.Customers C
ON C.order_id = FS.orderID;


--Average Quantity sold in February
SELECT SUM(FS.Quantity)/ COUNT(C.acctnum) AS AverageQuantitySold
FROM BIT_DB.FebSales FS
INNER JOIN BIT_DB.Customers C
ON C.order_id = FS.orderID;


--Products in order bringing in the most revenue in January
SELECT DISTINCT product, SUM(Quantity * price) AS Revenue
FROM BIT_DB.FebSales
GROUP BY product
ORDER BY Revenue DESC



















